  
name: Pipeline

on:
  push:
    branches: [ master ]
    
#starting buildjob
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Step 1 - Checkout main branch from GitHub 
        uses: actions/checkout@v2
        with:
          # Fetch all commits
          fetch-depth: 0

      - name: Semantic versioning
        id: versioning
        uses: PaulHatch/semantic-version@v4.0.2
        with:
          branch: main
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          format: "v${major}.${minor}.${patch}-prerelease${increment}"
          
      #- name: Perform SAST Scan
        #run: |
         # scancentral -version
          #scancentral -url ${SC_CONTROLLER_URL} start $BUILD_OPTS -upload -application
        #env:
          #SC_CONTROLLER_URL: ${{ secrets.SC_CONTROLLER_URL }}
          #SSC_UPLOAD_TOKEN: ${{ secrets.SSC_UPLOAD_TOKEN }}
          #APPLICATION: "My Application"
         # VERSION: "1.0"
          #BUILD_OPTS: "-bt mvn"
      #- name: Save ScanCentral Logs
        #uses: actions/upload-artifact@v2
        #if: failure()
        #with:
          #name: scancentral-logs
          #path: ~/.fortify/scancentral/log
    
        
      # Runs a single command using the runners shell
      - name: Step 2 - Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 17
                  
      - name: Step3 - Build with Gradle
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: build
      - run: |
          echo "-------"
          ls '${{ github.workspace }}'/build/libs
          ls '${{ github.workspace }}'
          
      #- name: Step6 - Execute of jar file
        #run:
          #java -cp '${{ github.workspace }}'/gs-spring-boot-0.1.0.jar
          
      - name: Step5 Jfrog artifactory
        uses: jfrog/setup-jfrog-cli@v2.0.0
      #- run: jfrog rt ping --url https://www.google.co.in/
        
      #- name: Step6 :sonarqube Scan code
        #uses: vtex/action-sonarqube@main
        #with:
          #githubToken: ${{ secrets.GITHUB_TOKEN }} # https://docs.github.com/en/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
          #host: ${{ secrets.SQHost }} # Variable set in the Github Secrets
          #token: ${{ secrets.SQToken }} # Variable set in the Github Secrets 
        
      - name: Step 7 - Deploy to Dev
        needs: [Build]
        uses: jhunt/cf-push@v1
        runs-on: ubuntu-latest
        environment:
          name: Development
          with:
            api: https://api.cf.ap21.hana.ondemand.com
            username: ramyaravindra999@gmail.com
            password: Azuredevops@123
            org: 6fece677trial
            space: prod
            manifest: manifest.yml
           - name: Deploy
             run: echo I am deploying!
